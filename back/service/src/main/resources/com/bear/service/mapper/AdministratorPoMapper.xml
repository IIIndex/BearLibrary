<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bear.service.mapper.AdministratorPoMapper">
  <resultMap id="BaseResultMap" type="com.bear.service.model.po.AdministratorPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="valid" jdbcType="INTEGER" property="valid" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="modified_id" jdbcType="BIGINT" property="modifiedId" />
    <result column="modified_name" jdbcType="VARCHAR" property="modifiedName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `id`, `name`, `password`, `valid`, `gmt_create`, `gmt_modified`, `create_id`, `create_name`, 
    `modified_id`, `modified_name`
  </sql>
  <select id="selectByExample" parameterType="com.bear.service.model.po.AdministratorPoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from administrator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from administrator
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from administrator
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bear.service.model.po.AdministratorPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into administrator (`name`, `password`, `valid`, 
      `gmt_create`, `gmt_modified`, `create_id`, 
      `create_name`, `modified_id`, `modified_name`
      )
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{valid,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{createId,jdbcType=BIGINT}, 
      #{createName,jdbcType=VARCHAR}, #{modifiedId,jdbcType=BIGINT}, #{modifiedName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bear.service.model.po.AdministratorPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into administrator
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
      <if test="gmtCreate != null">
        `gmt_create`,
      </if>
      <if test="gmtModified != null">
        `gmt_modified`,
      </if>
      <if test="createId != null">
        `create_id`,
      </if>
      <if test="createName != null">
        `create_name`,
      </if>
      <if test="modifiedId != null">
        `modified_id`,
      </if>
      <if test="modifiedName != null">
        `modified_name`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="modifiedId != null">
        #{modifiedId,jdbcType=BIGINT},
      </if>
      <if test="modifiedName != null">
        #{modifiedName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bear.service.model.po.AdministratorPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update administrator
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        `gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        `gmt_modified` = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        `create_id` = #{createId,jdbcType=BIGINT},
      </if>
      <if test="createName != null">
        `create_name` = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="modifiedId != null">
        `modified_id` = #{modifiedId,jdbcType=BIGINT},
      </if>
      <if test="modifiedName != null">
        `modified_name` = #{modifiedName,jdbcType=VARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bear.service.model.po.AdministratorPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update administrator
    set `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `valid` = #{valid,jdbcType=INTEGER},
      `gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},
      `gmt_modified` = #{gmtModified,jdbcType=TIMESTAMP},
      `create_id` = #{createId,jdbcType=BIGINT},
      `create_name` = #{createName,jdbcType=VARCHAR},
      `modified_id` = #{modifiedId,jdbcType=BIGINT},
      `modified_name` = #{modifiedName,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>